<html>
<head>
</head>
<body style="font-family:sans-serif; font-size:15px; width:800px; margin-left:auto; margin-right:auto; margin-top:150px">
<center><h1>POOL GAME</h1></center>
<canvas id="mycanvas" width ="840" height="420" style="border:2px solid #000000;"></canvas>
<br>
<br>
<center>
<br>
<input id="velocity" type="range" min="0.1" max="20" step="0.1" value="5">
<p>Velocity: <span id="slider1"></span></p>
<input id="angle" type="range" min="0" max="359" value="180">
<p>Angle: <span id="slider2"></span></p>
<br>
<input id="start" value="Play" onclick="play()" type="button">
</center> 
</body>
<script>
//var n = 1;  //n = no. of balls
var radius = 30;
var ball_r = 15;
var t_sides = 5;
var width=840;
var height = 420;
var n = 1;  //n = no. of balls
var f = 40; //deacceleration due to friction
var e1 = 0.5; //e for balls
var e2 = 0.5; //e for edges
var potx = new Array(2);
var poty = new Array(2);
for(var i=0; i<2; i++)
  {
   potx[i]= new Array(3);
   poty[i]= new Array(3);
  }
var c = document.getElementById("mycanvas");
var ctx = c.getContext("2d");
function create_table(){
ctx.fillStyle = "#CA5A2F";
ctx.fillRect(0,0,width,height);
ctx.fillStyle = "#00CC00";
ctx.fillRect(radius+t_sides,radius+t_sides,width-2*(radius+t_sides),height-2*(radius+t_sides));
ctx.beginPath();
ctx.lineWidth= "2";
ctx.strokeStyle = "#000000";
ctx.rect(radius+t_sides,radius+t_sides,width-2*(radius+t_sides),height-2*(radius+t_sides));
ctx.stroke();
for(i=0;i<2;i++)
{
  potx[i][0]=t_sides+radius;
  potx[i][1]=width/2;
  potx[i][2]=width - (t_sides+radius);
}
for(i=0;i<3;i++)
{
  poty[0][i]=t_sides+radius;
  poty[1][i]=height-(t_sides+radius);
}
for(i=0;i<2;i++)
{
   for(var j=0;j<3;j++)
   {
      ctx.beginPath();
      ctx.arc(potx[i][j],poty[i][j],radius,0,2*Math.PI);
      ctx.fillStyle = "#000000";
      ctx.fill();
   }
}
}
//////////////////////////////////////Array-Object/////////////////////////////////////
function newball(x,y,vx,vy,ax,ay,col,r){
		this.x = x;
		this.y = y;
		this.vx = vx;
		this.vy = vy;
		this.ax = ax;
		this.ay = ay;
		this.col = col;
		this.r = r;
			}

var ball = new Array();

for (i = 0; i < n+1; i++)
ball[i] = new newball(210+15*i, 210+10*i,0,0,0,0,"white",15);
//////////////////////////////////////////////////////////////////////////////////////

/*function getRandomColor() {
  var letters = '3456789ABC';
  var color = '#';
  for (var i = 0; i < 6; i++) {
    color += letters[Math.floor(Math.random() * 10)];
  }
  return color;
}
for(i=0;i<5;i++)
    color_ball[i] = getRandomColor();
*/
//////color to ball////////////
ball[0].col ="#0000FF";
//////////////////////////////
function inwhite()
{
  ball[0].x = width/4;
  ball[0].y = height/2;
}
function initial()
{
for(var i = 1 ;i<n+1; i++){
ball[i].x = 3*width/4 + 15*i;
ball[i].y = height/2 + 10*i; 
}
inwhite();
}
function showball()
{
      ctx.beginPath();
      ctx.arc(ball[0].x,ball[0].y,ball[0].r,0,2*Math.PI);
      ctx.fillStyle = "#FFFFFF";
      ctx.fill();
      for(i=1;i<n+1;i++)
      {
        ctx.beginPath();
        ctx.arc(ball[i].x,ball[i].y,ball[i].r,0,2*Math.PI);
        ctx.fillStyle = ball[i].col;
        ctx.fill();
      }
}
function start()
{
  initial();
  create_table();
  showball();
}
start();
var v, ang;
var slider1 = document.getElementById("velocity");
var output1 = document.getElementById("slider1");
output1.innerHTML = slider1.value;
v=slider1.value;
slider1.oninput = function() {
  output1.innerHTML = this.value;
}
var slider2 = document.getElementById("angle");
var output2 = document.getElementById("slider2");
output2.innerHTML = slider2.value;
ang=slider2.value;
slider2.oninput = function() {
  output2.innerHTML = this.value;
}

for(i=1;i<n+1;i++){
  ball[i].vx=0;
  ball[i].vy=0;
}
//////////////------------Changepos------------//////////////////////////////////////////////
function changepos(x,vx,vy,dt)
{
   if(vx==0)
   ax=0;
   else{
   ax=-vx*f/Math.sqrt(vx*vx+vy*vy);
   }
   x=x+vx*dt+(ax*dt*dt)/2;
   console.log("changeposition");
   return x;
}
/////////////////--------Changev----------//////////////////////////////////////////////////
function changev(vx,vy,dt)
{
   if(vx==0)
   ax=0;
   else{
   ax=-vx*f/Math.sqrt(vx*vx+vy*vy);
   } 
   console.log("changevelocity");   
   return vx+ax*dt;
}
////////////////////////////////////////////////////////////////////
function pocket()
{
   for(i=1;i<n+1;i++)
      {
         for(j=0;j<2;j++)
            {
               for(var k=0;k<3;k++)
                  {
                     if((ball[i].x-potx[j][k])*(ball[i].x-potx[j][k])+(ball[i].y-poty[j][k])*(ball[i].y-poty[j][k])<radius*radius){
			ball[i].vx = 0;
			ball[i].vy = 0;
			while(ball[i].r!=0)
                       ball[i].r=ball[i].r-1;}
                  }
             }
       }

   for(j=0;j<2;j++)
            {
               for(var k=0;k<3;k++)
                  {
                     if((ball[0].x-potx[j][k])*(ball[0].x-potx[j][k])+(ball[0].y-poty[j][k])*(ball[0].y-poty[j][k])<radius*radius){
                        ball[0].vx = 0;
			ball[0].vy = 0;                       
                        if(ball[0].r!=0)
                        ball[0].r=ball[0].r-1;
                        else{
                          inwhite();
                          if(ball[0].r!=ball_r)
                              ball[0].r=ball[0].r+1;
                          }
                       }
   
                  }
             } 
console.log("pocket"); 
}
/////////////----Wall-Collision----/////////////////////////////////////
function col_side()
{
    for(var i=0; i<n+1;i=i+1){
	if(ball[i].x<=radius+t_sides+ball_r)
         {
              ball[i].x=radius+t_sides+ball_r;
              ball[i].vx=-e2*ball[i].vx;
          }
	if(ball[i].x>=width-t_sides-ball_r-radius)
      {
          ball[i].x=width-t_sides-ball_r-radius;
           ball[i].vx=-e2*ball[i].vx;
      }
        if(ball[i].y<=radius+t_sides+ball_r)
         {
              ball[i].y=radius+t_sides+ball_r;
              ball[i].vy=-e2*ball[i].vy;
          }
        if(ball[i].y>=height-t_sides-ball_r-radius)
      {
           ball[i].y=height-t_sides-ball_r-radius;
           ball[i].vy=-e2*ball[i].vy;
      }
	}
console.log("Wall-collision");
}
//////////////////--------------Collision------------------////////////////////////////////
//vy yet to be written
function collision()
{
  for(i = 0 ; i< n+1 ; i++)
    {
      for(j = i+1 ; j< n+1 ; j++)
      { if(Math.pow((ball[i].x - ball[j].x),2) + Math.pow((ball[i].y - ball[j].y),2)
		<= 4*ball_r*ball_r)
         { var t = (ball[j].y-ball[i].y)/(ball[j].x-ball[i].x);
           var uc1 = ball[i].vx/Math.sqrt(1 + t*t) + ball[i].vy*t/Math.sqrt(1 + t*t);
           var uc2 = ball[j].vx/Math.sqrt(1 + t*t) + ball[j].vy*t/Math.sqrt(1 + t*t);
           var up1 = ball[i].vy/Math.sqrt(1 + t*t) - ball[i].vx*t/Math.sqrt(1 + t*t);
           var up2 = ball[j].vy/Math.sqrt(1 + t*t) - ball[j].vx*t/Math.sqrt(1 + t*t);
	   var vc1 = (1-e1)uc1/2 + (1+e1)uc2/2;
           var vc2 = (1-e1)uc2/2 + (1+e1)uc1/2;
	   ball[j].vx = vc2/Math.sqrt(1 + t*t) - up2*t/Math.sqrt(1 + t*t);
	   ball[i].vx = vc1/Math.sqrt(1 + t*t) - up1*t/Math.sqrt(1 + t*t);
	   if (ball[i].vx!=0)
		ball[i].ax = -f*vx/Math.sqrt(vx*vx+vy*vy);
	   if (ball[i].vy!=0)
		ball[i].ay = -f*vy/Math.sqrt(vx*vx+vy*vy);
	   if (ball[j].vx!=0)
		ball[j].ax = -f*vx/Math.sqrt(vx*vx+vy*vy);
	   if (ball[j].vy!=0)
		ball[j].ax = -f*vy/Math.sqrt(vx*vx+vy*vy);
	    
	}
       }

    }
console.log("collision");
}
/////////////////////////////////////////////////////////////////////////////////////////
function update(t)
{ 
   ball[0].x = changepos(ball[0].x,ball[0].vx,ball[0].vy,t);
   ball[0].y = changepos(ball[0].y,ball[0].vy,ball[0].vx,t);
   ball[0].vx = changev(ball[0].vx,ball[0].vy,t);
   ball[0].vy = changev(ball[0].vy,ball[0].vx,t);
}
var trigger;
function stop()
{
     var flag=0;
     if(ball[0].vx!=0||ball[0].vy!=0) flag = 1;
            
     for(var i=1;i<n+1;i++){
         if(ball[i].vx!=0||ball[i].vy!=0) flag=1;
       }
     //if(flag==1)
    //{
       update(0.02);
       pocket();
      if(ball[0].x==width/4 && ball[0].y==height/2){ 
        if(ball[0].r!=ball_r)
          ball[0].r=ball[0].r+1;
      }
       col_side();
      // collision();
       create_table();
       showball();
    //}
     /*else{
       pocket();
       col_side();
       create_table();
       showball();
       clearInterval(trigger);
      }*/
/*ctx.font= '30px Arial';
ctx.fillText('aman',wballx,wbally);
*/
}
function animation()
{
    
     trigger=setInterval(stop,100);
}
function play()
{
   v=slider1.value*20;
   ang=slider2.value;
   ball[0].vx=v*Math.cos(ang*Math.PI/180);
   ball[0].vy=v*Math.sin(ang*Math.PI/180);
   //create_table();
   showball();
   animation();
} 
</script>
</html>
